<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
   	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
   	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">




	<!-- 配置JMS连接工厂 -->
	<!-- 采用TCP长连接方式, 避免每次建立短连接需要的额外工作时间 -->
	<bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="maxConnections" value="10" />
		<property name="expiryTimeout" value="3600000" />
		<property name="connectionFactory">
			<bean class="org.apache.activemq.spring.ActiveMQConnectionFactory">
				<property name="brokerURL">
					<value>${jms.broker.url}</value>
				</property>
				<property name="useCompression" value="true" />
				<property name="useAsyncSend" value="false" />
				<property name="userName" value="${jms.username}" />
				<property name="password" value="${jms.password}" />
				<property name="copyMessageOnSend" value="false" />
				<property name="optimizeAcknowledge" value="false" /><!-- 关闭ack机制 -->
				<property name="alwaysSessionAsync" value="true" />
			</bean>
		</property>
	</bean>

	<!-- 配置JMS模版 -->
	<!-- 作用: spring自带的jms 将消息放到mq队列 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="receiveTimeout" value="${jms.revieve.timeout}" />
		<property name="deliveryMode" value="1" />
		<property name="explicitQosEnabled" value="true" />
		<property name="timeToLive" value="3600000" />
	</bean>


	<!-- queue start 点对点 -->
	<bean id="txnQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${jms.queue.txnQueue}" />
	</bean>


	<bean id="txnTopic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg index="0" value="${jms.topic.txnTopic}" />
	</bean>
	
	


	<!-- server的配置 -->
	<bean id="txnListenerContainer"
		class="com.activemq.jms.server.ServerMsgListenerContainer">
		<property name="concurrentConsumers" value="${jms.minListener}" /><!--同时启动 concurrentConsumers(如10) 个Listener 实例来并发消费消息-->
		<!-- <property name="maxConcurrentConsumers" value="${jms.maxListener}" /> --><!-- 消费者数量上限 -->
		<property name="connectionFactory" ref="connectionFactory" />
<!-- 		<property name="destination" ref="txnQueue" />
 -->		<property name="destination" ref="txnTopic" /><!-- topic模式下 没有使用jms.maxListener 每一条消息别消费concurrentConsumers 次-->
		<property name="messageListener" ref="servertxnListener" />
	</bean>

	<!--消息监听  从监听的队列中拉取消息-->
	<bean id="servertxnListener" class="com.activemq.jms.server.ServerTxnListener">
		
	</bean>


</beans>
